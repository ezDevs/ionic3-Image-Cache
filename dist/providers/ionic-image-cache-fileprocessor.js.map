{"version":3,"file":"ionic-image-cache-fileprocessor.js","sourceRoot":"","sources":["../../src/providers/ionic-image-cache-fileprocessor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAY,MAAM,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,YAAY,EAAsB,MAAM,6BAA6B,CAAC;AAC/E,OAAO,EAAE,IAAI,EAA2C,MAAM,oBAAoB,CAAC;;IAMjF,uCAAmB,KAAa,EACtB,QAAsB,EACtB,IAAU,EACX,MAAc,EACd,gBAAuC;QAJ7B,UAAK,GAAL,KAAK,CAAQ;QACtB,aAAQ,GAAR,QAAQ,CAAc;QACtB,SAAI,GAAJ,IAAI,CAAM;QACX,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAuB;KAG/C;IAED,6DAAqB,GAArB,UAAsB,GAAG,EAAE,GAAG;QAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;KAC1D;IAED,iDAAS,GAAT,UAAU,eAAuB,EAAE,QAAkB;QAArD,iBAgBC;QAfC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,QAAQ;YACzB,IAAI,UAAU,GAAW,EAAE,CAAC;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC3C;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC;aAC9C;YACD,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,SAAyB;gBACrF,QAAQ,CAAC,SAAS,CAAC,CAAC;aACrB,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;gBACV,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACf,KAAI,CAAC,GAAG,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;aACxC,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IACD,gDAAQ,GAAR,UAAS,eAAuB,EAAE,QAAkB;QAApD,iBAiBC;QAhBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,QAAQ;YACzB,IAAI,UAAU,GAAW,EAAE,CAAC;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC3C;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC;aAC9C;YACD,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC,IAAI,CAAC,UAAC,KAAc;gBAClE,QAAQ,CAAC,KAAK,CAAC,CAAC;aACjB,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;gBACV,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAChB,KAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;gBACjC,KAAI,CAAC,SAAS,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;aAC3C,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IAED,2DAAmB,GAAnB,UAAoB,eAAuB,EAAE,QAAkB;QAA/D,iBAmBC;QAlBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,QAAQ;YACzB,IAAI,UAAU,GAAW,EAAE,CAAC;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,eAAe,CAAC;aAC7D;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,qBAAqB,GAAG,eAAe,CAAC;aAChE;;YAGD,AADA,wBAAwB;YACxB,KAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,MAAsB;gBACpE,QAAQ,CAAC,MAAM,CAAC,CAAC;aAClB,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;gBACV,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACf,KAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;gBACrC,KAAI,CAAC,SAAS,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;aAC3C,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IAED,qDAAa,GAAb,UAAc,eAAuB,EAAE,QAAkB;QAAzD,iBAgBC;QAfC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,QAAQ;YACzB,IAAI,UAAU,GAAW,EAAE,CAAC;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC3C;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC;aAC9C;YACD,KAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC,IAAI,CAAC,UAAC,YAA0B;gBACvF,QAAQ,CAAC,YAAY,CAAC,CAAC;aACxB,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;gBACV,KAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;aAClC,CAAC,CAAC;SACJ,CAAC,CAAC;KAEJ;IAED,wDAAgB,GAAhB,UAAiB,eAAuB,EAAE,QAAkB;QAA5D,iBAgBC;QAfC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,QAAQ;YACzB,IAAI,UAAU,GAAW,EAAE,CAAC;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC3C;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC;aAC9C;YACD,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC,IAAI,CAAC,UAAC,KAAuB;gBAC1E,QAAQ,CAAC,KAAK,CAAC,CAAC;aACjB,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;gBACV,KAAI,CAAC,GAAG,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;aAC3C,CAAC,CAAC;SACJ,CAAC,CAAC;KAEJ;IAED,iDAAS,GAAT,UAAU,eAAuB,EAAE,QAAkB,EAAE,QAAgB;QAAvE,iBAkBC;QAjBC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,QAAQ;YACzB,IAAI,UAAU,GAAW,EAAE,CAAC;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,eAAe,CAAC;aAC7D;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,qBAAqB,GAAG,eAAe,CAAC;aAChE;YACD,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,MAAe;;gBAE7D,QAAQ,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,GAAG,GAAG,GAAG,QAAQ,EAAE,CAAC,CAAC;aACnE,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;gBACV,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,GAAG,GAAG,GAAG,QAAQ,EAAE,CAAC,CAAC;gBACjE,KAAI,CAAC,GAAG,CAAC,2BAA2B,EAAE,GAAG,CAAC,CAAC;aAC5C,CAAC,CAAC;SACJ,CAAC,CAAC;KAEJ;IAED,+CAAO,GAAP,UAAQ,MAAsB,EAAE,QAAgB,EAAE,GAAW;QAA7D,iBAgBC;QAfC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,QAAQ;YACzB,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,KAAgB;gBAC3E,KAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBACxB,QAAQ,CAAC,KAAK,CAAC,CAAC;aACjB,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;gBACV,KAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;gBAC5C,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,KAAgB;oBAC/G,KAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC1B,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACjB,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;oBACV,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACf,KAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;iBAC9C,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IAED,mDAAW,GAAX,UAAY,SAAiB,EAAE,UAA0B;QAA1B,2BAAA,EAAA,iBAA0B;QACvD,IAAI,IAAI,GAAW,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;QACjD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;SAC1C;QACD,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC;KACb;IAED,gDAAQ,GAAR,UAAS,GAAW;QAClB,IAAI,MAAM,GAAY,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;QACnJ,MAAM,CAAC,MAAM,CAAC;KACf;IAED,qDAAa,GAAb,UAAc,OAAe,EAAE,QAAkB,EAAE,eAAwC,EAAE,QAAwB;QAArH,iBAoCC;QApCkD,gCAAA,EAAA,gCAAwC;QAAE,yBAAA,EAAA,eAAwB;QACnH,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,QAAQ,EAAE,MAAM;YAClC,IAAM,YAAY,GAAuB,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAEhE,IAAI,GAAG,GAAG,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,IAAI,GAAW,CAAC,CAAC;YACrB,IAAI,UAAU,GAAW,EAAE,CAAC;YAE5B,IAAI,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;YAElD,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,eAAe,GAAG,GAAG,GAAG,KAAK,CAAC;aAC3E;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,qBAAqB,GAAG,eAAe,GAAG,GAAG,GAAG,KAAK,CAAC;aAC9E;YAED,YAAY,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,KAAgB;gBACzE,QAAQ,CAAC,KAAK,CAAC,CAAC;aACjB,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC,CAAC;aACf,CAAC,CAAA;YACF,YAAY,CAAC,UAAU,CAAC,UAAC,QAAQ;gBAC/B,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACd,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;oBACtE,EAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;wBAEpB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gCAAgC,EAAE,QAAQ,CAAC,CAAC;wBAC/D,IAAI,GAAG,QAAQ,CAAC;qBACjB;iBAEF,CAAC,CAAA;aAEH,CAAC,CAAA;SACH,CAAC,CAAC;KACJ;IAED,wDAAgB,GAAhB,UAAiB,GAAW;QAC1B,IAAI,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAC7C,MAAM,CAAC,QAAQ,CAAC;KACjB;IAED,yDAAiB,GAAjB,UAAkB,GAAG;QACnB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;KACrD;IAED,yDAAiB,GAAjB,UAAkB,GAAG;QACnB,IAAM,eAAe,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC/C,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;KACxD;IAED,2CAAG,GAAH;QAAI,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;QACT,EAAE,CAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC,CAAC;YACzC,OAAO,CAAC,GAAG,OAAX,OAAO,EAAQ,IAAI,EAAE;SACtB;KACF;;gBAzNF,UAAU;;;;gBANQ,MAAM;gBAEhB,YAAY;gBACZ,IAAI;gBAFQ,MAAM;gBAFlB,qBAAqB;;wCAA9B;;SAQa,6BAA6B","sourcesContent":["import { IonicImageCacheConfig } from './ionic-image-cache-config';\nimport { Platform, Events } from 'ionic-angular';\nimport { Injectable, NgZone } from '@angular/core';\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer';\nimport { File, FileEntry, RemoveResult, DirectoryEntry } from '@ionic-native/file';\n\n\n@Injectable()\nexport class IonicImageCacheHelperProvider {\n\n  constructor(public event: Events,\n    private transfer: FileTransfer,\n    private file: File,\n    public ngZone: NgZone,\n    public imageCacheConfig: IonicImageCacheConfig,\n    ) {\n\n  }\n\n  randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  createDir(localFolderPath: string, platform: Platform): Promise<DirectoryEntry> {\n    return new Promise(resolver => {\n      let targetPath: string = \"\";\n      if (platform.is('ios')) {\n        targetPath = this.file.documentsDirectory;\n      }\n      else if (platform.is('android')) {\n        targetPath = this.file.externalDataDirectory;\n      }\n      this.file.createDir(targetPath, localFolderPath, false).then((directory: DirectoryEntry) => {\n        resolver(directory);\n      }).catch(err => {\n        resolver(null);\n        this.log(\"Create directory fail\", err);\n      });\n    });\n  }\n  checkDir(localFolderPath: string, platform: Platform): Promise<boolean> {\n    return new Promise(resolver => {\n      let targetPath: string = \"\";\n      if (platform.is('ios')) {\n        targetPath = this.file.documentsDirectory;\n      }\n      else if (platform.is('android')) {\n        targetPath = this.file.externalDataDirectory;\n      }\n      this.file.checkDir(targetPath, localFolderPath).then((yesNo: boolean) => {\n        resolver(yesNo);\n      }).catch(err => {\n        resolver(false);\n        this.log(\"Check directory\", err);\n        this.createDir(localFolderPath, platform);\n      });\n    });\n  }\n\n  resolveDirectoryUrl(localFolderPath: string, platform: Platform): Promise<DirectoryEntry> {\n    return new Promise(resolver => {\n      let targetPath: string = \"\";\n      if (platform.is('ios')) {\n        targetPath = this.file.documentsDirectory + localFolderPath;\n      }\n      else if (platform.is('android')) {\n        targetPath = this.file.externalDataDirectory + localFolderPath;\n      }\n\n      // this.log(targetPath);\n      this.file.resolveDirectoryUrl(targetPath).then((dEntry: DirectoryEntry) => {\n        resolver(dEntry);\n      }).catch(err => {\n        resolver(null);\n        this.log(\"resolveDirectoryUrl\", err);\n        this.createDir(localFolderPath, platform);\n      });\n    });\n  }\n\n  clearAllCache(localFolderPath: string, platform: Platform) {\n    return new Promise(resolver => {\n      let targetPath: string = \"\";\n      if (platform.is('ios')) {\n        targetPath = this.file.documentsDirectory;\n      }\n      else if (platform.is('android')) {\n        targetPath = this.file.externalDataDirectory;\n      }\n      this.file.removeRecursively(targetPath, localFolderPath).then((removeResult: RemoveResult) => {\n        resolver(removeResult);\n      }).catch(err => {\n        this.log(\"Clear directory\", err);\n      });\n    });\n\n  }\n\n  getFilesInFolder(localFolderPath: string, platform: Platform) {\n    return new Promise(resolver => {\n      let targetPath: string = \"\";\n      if (platform.is('ios')) {\n        targetPath = this.file.documentsDirectory;\n      }\n      else if (platform.is('android')) {\n        targetPath = this.file.externalDataDirectory;\n      }\n      this.file.listDir(targetPath, localFolderPath).then((entry: Array<FileEntry>) => {\n        resolver(entry);\n      }).catch(err => {\n        this.log(\"Get all files in folder \", err);\n      });\n    });\n\n  }\n\n  checkFile(localFolderPath: string, platform: Platform, filename: string) {\n    return new Promise(resolver => {\n      let targetPath: string = \"\";\n      if (platform.is('ios')) {\n        targetPath = this.file.documentsDirectory + localFolderPath;\n      }\n      else if (platform.is('android')) {\n        targetPath = this.file.externalDataDirectory + localFolderPath;\n      }\n      this.file.checkFile(targetPath, filename).then((result: boolean) => {\n        // this.log(\"File exists\");\n        resolver({ yesNo: result, fileURL: targetPath + \"/\" + filename });\n      }).catch(err => {\n        resolver({ yesNo: false, fileURL: targetPath + \"/\" + filename });\n        this.log(\"Get if file is availbale \", err);\n      });\n    });\n\n  }\n\n  getFile(DEntry: DirectoryEntry, fileName: string, url: string): Promise<FileEntry> {\n    return new Promise(resolver => {\n      this.file.getFile(DEntry, fileName, { create: false }).then((entry: FileEntry) => {\n        this.log(\"File exists\");\n        resolver(entry);\n      }).catch(err => {\n        this.log(\"Get file failed \", fileName, err);\n        this.file.getFile(DEntry, fileName + \".\" + this.getFileExtentions(url), { create: false }).then((entry: FileEntry) => {\n          this.log(\"File exists 2\");\n          resolver(entry);\n        }).catch(err => {\n          resolver(null);\n          this.log(\"Get file failed 2\", fileName, err);\n        });\n      });\n    });\n  }\n\n  extractPath(remoteURL: string, asFilename: boolean = true) {\n    let path: string = (new URL(remoteURL)).pathname;\n    if (asFilename) {\n      path = path.replace(/[^a-zA-Z0-9]/g, \"\");\n    }\n    this.log('path -->', path);\n    return path;\n  }\n\n  ValidURL(str: string): boolean {\n    let result: boolean = str == undefined ? false : ((str.indexOf(\"http://\") > -1 || str.indexOf(\"https://\") > -1) && str.indexOf(\"data:image/\") < 0);\n    return result;\n  }\n\n  downloadImage(fileurl: string, platform: Platform, localFolderPath: string = \"cache_assets\", trustAll: boolean = true) {\n    return new Promise((resolver, reject) => {\n      const fileTransfer: FileTransferObject = this.transfer.create();\n\n      let ext = this.getFileExtentions(fileurl);\n      let prog: number = 0;\n      let targetPath: string = \"\";\n\n      let fpath = this.extractPath(fileurl) + \".\" + ext;\n      \n      if (platform.is('ios')) {\n        targetPath = this.file.documentsDirectory + localFolderPath + \"/\" + fpath;\n      }\n      else if (platform.is('android')) {\n        targetPath = this.file.externalDataDirectory + localFolderPath + \"/\" + fpath;\n      }\n\n      fileTransfer.download(fileurl, targetPath, trustAll).then((entry: FileEntry) => {\n        resolver(entry);\n      }, (error) => {\n        this.log(error);\n        reject(error);\n      })\n      fileTransfer.onProgress((listener) => {\n        this.ngZone.run(() => {\n          let tempprog = Math.round(((listener.loaded / listener.total) * 100));\n          if (tempprog > prog) {\n\n            this.event.publish('ionicImageCacheprogressCounter', tempprog);\n            prog = tempprog;\n          }\n\n        })\n\n      })\n    });\n  }\n\n  safeiOSNativeURL(url: string): string {\n    let finalURL = url.replace(/^file:\\/\\//, '');\n    return finalURL;\n  }\n  \n  getFileExtentions(url): string {\n    return this.getValidExtension(url.split('.').pop());\n  }\n\n  getValidExtension(ext) {\n    const validExtensions = ['png', 'jpg', 'jpeg'];\n    return validExtensions.indexOf(ext) > -1 ? ext : 'jpg';\n  }\n\n  log(...args) {\n    if(this.imageCacheConfig.enableDebugMode) {\n      console.log(...args);\n    }\n  }\n}\n"]}