import { IonicImageCacheConfig } from '../providers/ionic-image-cache-config';
import { NgZone, EventEmitter, ElementRef } from '@angular/core';
import { IonicImageCacheHelperProvider } from '../providers/ionic-image-cache-fileprocessor';
import { Platform } from 'ionic-angular';
import { FileEntry, DirectoryEntry } from '@ionic-native/file';
import { ImageViewerController } from 'ionic-img-viewer';
export declare class IonicImageCacheComponent {
    private ngZone;
    platform: Platform;
    imageCacheConfig: IonicImageCacheConfig;
    private helpers;
    avatarbase64: string;
    srcUrl: string;
    imageViewerBigSrcUrl: string;
    cache_directory_name: string;
    fallback: string;
    altString: string;
    spinnerNameString: string;
    spinnerColorString: string;
    showPrev: boolean | string;
    imgCssClass: string;
    realImage: ElementRef;
    _imageViewerCtrl: ImageViewerController;
    src: string;
    clickReturnObj: any;
    highResSrc: string;
    fallbackUrl: string;
    spinnerName: string;
    spinnerColor: string;
    alt: string;
    showPreview: boolean | string;
    enableSpinner: boolean | string;
    isAvatar: boolean | string;
    loaded: EventEmitter<{}>;
    clicked: EventEmitter<{}>;
    constructor(imageViewerCtrl: ImageViewerController, ngZone: NgZone, platform: Platform, imageCacheConfig: IonicImageCacheConfig, helpers: IonicImageCacheHelperProvider);
    presentImage(event: any, realImage: any): void;
    setImageSrc(nativeURL?: string, entry?: FileEntry): void;
    imageOnLoad(): void;
    saveImageToFilesystem(src: string): void;
    clearAllCache(): void;
    verifyFileAvailability(src: string, dEntry: DirectoryEntry): void;
    activeDirectory: DirectoryEntry;
    initialise(src: string): Promise<void>;
    log(...args: any[]): void;
}
